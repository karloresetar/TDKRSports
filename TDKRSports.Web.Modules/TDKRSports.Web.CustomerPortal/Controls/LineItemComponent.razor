@using System.Globalization
@inject IDeleteProductUseCase deleteProductUseCase
@inject IUpdateQuantityUseCase updateQuantityUseCase

<MessageComponent @ref="messageComponent"></MessageComponent>

@if (LineItem != null && LineItem.Product != null)
{
    <li class="row">
        <div class="col">
            <img src="@LineItem.Product.ImageLink" />
        </div>
        <div class="col">
            <h5>@LineItem.Product.Name</h5>
            <div>
                <b>Quantity:&nbsp;&nbsp;</b>
                <input type="number" min="0" value="@LineItem.Quantity" @onchange="HandleQuantityChange" />
            </div>
            <div>
                <b>Price:&nbsp;&nbsp;@LineItem.Product.Price.ToString("C")</b>
            </div>
        </div>
        <div class="col">
            <button class="btn btn-light" @onclick="@(() => DeleteProduct(LineItem.ProductId))"><b>Delete</b></button>
        </div>
    </li>
}

@code {
    [Parameter]
    public OrderLineItem LineItem { get; set; }

    [Parameter]
    public EventCallback<Order> OnDeleteProduct { get; set; }

    [Parameter]
    public EventCallback<Order> OnUpdateQuantity { get; set; }

    MessageComponent messageComponent;

    async void HandleQuantityChange(ChangeEventArgs e)
    {
        if (e.Value == null || string.IsNullOrWhiteSpace(e.Value.ToString())) return;
        int qty = 0;
        if (int.TryParse(e.Value.ToString(),out qty))
        {
            if (qty < 0)
            {

                messageComponent.ShowError("Quantity of a line item cannot be less than zero.");
                return;
            }

            var order = await updateQuantityUseCase.Execute(LineItem.ProductId, qty);
            await OnUpdateQuantity.InvokeAsync(order);

        }
    }

    async void DeleteProduct(int productId)
    {
        var order = await deleteProductUseCase.Execute(productId); // order je u parent komponenti tj. u shoppingCart komponenti i tribamo updateat pomocu EventCallbackova
        await OnDeleteProduct.InvokeAsync(order);
    }

    

}
